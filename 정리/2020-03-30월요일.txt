interface B   {-안의 모든변수는 final 상수다
int B;//생성자 함수는 사용 안댐
int B;

void B();- 100프로 추상적이다.
}// 사용하는 이유는 표준화 하기위해서 사용한다

class Z implements B {
   void B(){}
}

interface Y extends B{
   void Y();
}
class M implments Y{
	void Y(){}
	void B(){}
}부모함수를 비롯해 위의 조건에 미완성이있으면 무조껀 overriding 해줘야한다.



*유용한 클래스
(1) 기본적인 클래스
	-java.lang
	-자동 import
	-String/StringBuffer/StringBuilder
	-Math 
	-System

(2) 유틸리티 클래스
	-java.util
	-자료를관리(Collection)	
	-List
	-Set : 데이터 중복 안댐
	-Map : 대표적인 ex) id 와 password;  
 trim - 문자열의 앞뒤에있는 공백을 제거하는 메소드 

 map - 키와값을 쌍으로 객체를 저장하는 인터페이스

 set  - 중복을 허용 하지 않는다 

 list - 중복가능 데이터간에 순서가있다 
 set
마지막문제 짤리서 토큰 몇개인지 구하는 문제.

--------------------------------------------------------------------



자바 moto
Write Once Run Anywhere-한번의 작성 모든곳의 실행.


   -용어-

-자바Gui
  -1.1 : AWT
  
  -1.2 : Swing
  

Swing
    - 화면에 관한 클래스와 메소드가 다양함 
    - 운영체제(os)에 구별 없이 모양 동일 
    - 일반적으로 클래스명 앞에 J만 붙이면 된다.
	

layout (배치 : Container에 붙이는 방식)
	-FlowLayout
	윗줄 상단에 한줄로 배치
	컴포넌트의 크기가 고정
gridlayout
	행과열에 맞춰서 배치
	컴포넌트의 크기가 변경 

BorderLayout
	center,north,south,west,east영영에 배치
	컴포넌트의 크기가 변경

화면요소 :Component
	-붙을수 있는 요소: Container(Window/Frame/panel/.....)





































